package Server;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import logic.Account;

/**
 * BiteMe
 *
 * <p>No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 */
public class AccountApiService{
    /**
     * Create Account
     *
     * This can only be done by the logged in Account.
     *
     */
    public static void createAccount(Account account, Response response) {
        try {
            PreparedStatement postAccount = EchoServer.con.prepareStatement(
                    "INSERT INTO biteme.account (UserID, UserName,FirstName, LastName, PhoneNumber, Email,"
                    + " W4C, Type, status, branchManagerID, Area, isLoggedIn, isBusiness)"
                            + " VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?);SELECT last_insert_id();");
            postAccount.setInt(1, account.getAccountID());
            //Its the first userName that he had so the test is in users table on login
            postAccount.setString(2, account.getUserName());
            postAccount.setString(3, account.getFirstName());
            postAccount.setString(4, account.getLastName());
            postAccount.setString(5, account.getPhone());
            postAccount.setString(6, account.getEmail());
            postAccount.setString(7, account.getW4c_code());
            postAccount.setString(8, account.getType());
            postAccount.setString(9, account.getStatus());
            postAccount.setInt(10, account.getBranch_manager_ID());
            postAccount.setString(11, account.getArea());
            // isLoggedIn
            postAccount.setBoolean(12, false);
            postAccount.setBoolean(13, account.isBusiness());
            postAccount.execute();
            rs = postAccount.getResultSet();
        }
    	catch (SQLException e) {
          if (e.getErrorCode() == 1062){
              response.setCode(404);
              response.setDescription("User id already exist");
          }
          else {
        	  response.setCode(400);
              response.setDescription("Fields are missing");
          }
          return;
      }
        response.setCode(200);
        response.setDescription("Success in registering" + account.getAccountID());
        
    }
    
    /**
     * Creates list of Accounts with given input array
     *
     */
    public static void createAccountsWithArrayInput(List<Account> body) {
        // TODO: Implement...
        
        
    }
    
    /**
     * Creates list of Accounts with given input array
     *
     */
    public void createAccountsWithListInput(List<Account> body) {
        // TODO: Implement...
        
        
    }
    
    /**
     * Delete Account
     *
     * This can only be done by the logged in Account.
     *
     */
    public static void deleteAccount(String userName) {
        // TODO: Implement...
        
        
    }
    
    /**
     * Get Account by Account name
     *
     */
    public static Account getAccountByName(String userName) {
        // TODO: Implement...
        
        return null;
    }
    
    /**
     * Logs Account into the system
     *
     */
    public static String loginAccount(String userName, String password) {
        // TODO: Implement...
        
        return null;
    }
    
    /**
     * Logs out current logged in Account session
     *
     */
    public static void logoutAccount() {
        // TODO: Implement...
        
        
    }
    
    /**
     * Updated Account
     *
     * This can only be done by the logged in Account.
     *
     */
    public static void updateAccount(Account body, String userName) {
        // TODO: Implement...
        
        
    }
    
}

